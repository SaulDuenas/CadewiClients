package com.gatetech.content;import android.os.Parcel;import java.io.Serializable;import java.util.ArrayList;import java.util.Date;import java.util.HashMap;import java.util.List;import java.util.Map;/** * Helper class for providing sample content for user interfaces created by * Android template wizards. * <p> * TODO: Replace all uses of this class before publishing your app. */public class ClientContent implements Serializable {    /**     * An array of sample (dummy) items.     */    public static final List<ClientItem> ITEMS = new ArrayList<ClientItem>();    /**     * A map of sample (dummy) items, by ID.     */    public static final Map<String, ClientItem> ITEM_MAP = new HashMap<String, ClientItem>();/*    static {        // Add some sample items.        for (int i = 1; i <= COUNT; i++) {            addItem(createClientItem(i));        }    }*/    public ClientContent() {    }    public static void addItem(ClientItem item) {        ITEMS.add(item);        ITEM_MAP.put(item.client.toString(), item);    }    private static ClientItem createClientItem(int position) {        String item = String.valueOf(position);        Date fec = new Date();      //  return new ClientItem(position, ("Item " + item + "@contoso.com"),"rfc"+item,"name"+item,null,null,null,fec);        return null;    }    private static String makeDetails(int position) {        StringBuilder builder = new StringBuilder();        builder.append("Details about Item: ").append(position);        for (int i = 0; i < position; i++) {            builder.append("\nMore details information here.");        }        return builder.toString();    }    /**     * A dummy item representing a piece of content.     */    public static class ClientItem  implements Serializable {        public Integer client=0;        public String userMail="";        public String rfc="";        public String name="";        public String status = "";        public AddressContent Address;        public ContactContent Contacts;        public  Date last_date;        public ClientItem(Integer client,String userMail, String rfc, String name, String status, AddressContent address,ContactContent contact, Date last_date) {            this.client = client;            this.userMail = userMail;            this.rfc = rfc;            this.name=name;            this.status =  status;            this.Address = address;            this.Contacts=contact;            this.last_date=last_date;        }        protected ClientItem(Parcel in) {            if (in.readByte() == 0) {                client = null;            } else {                client = in.readInt();            }            userMail = in.readString();            rfc = in.readString();            name = in.readString();            status = in.readString();            //Contacts = (ContactContent) in.readSerializable();            //Address = (AddressContent) in.readSerializable();        }    }}